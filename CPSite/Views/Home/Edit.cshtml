@using System.Data.SqlClient;
@using DAL.Models;
@model DAL.Models.TravelCommand;
@{
    ViewData["Title"] = "Travel commands";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Travel command</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.Id)*@

        @Html.LabelFor(model => model.Participant, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var EmployeeResult = new List<string>();
            String sql = $"select * from Employee";
            SqlConnection connection = new SqlConnection("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=TravelCommand;Integrated Security=True;Connect Timeout=30;Encrypt=False;");
            connection.Open();
            using (SqlCommand command = new SqlCommand(sql, connection))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        Employee data = new Employee(reader.GetString(0).Trim(), reader.GetString(1).Trim(), reader.GetString(2), reader.GetDateTime(3), reader.GetInt64(4));
                        EmployeeResult.Add($"{data.FirstName} {data.LastName}");
                    }
                }
            }
            var ParticipantChoices = new SelectList(EmployeeResult);
        }
        @Html.DropDownListFor(model => model.Participant, ParticipantChoices, "-- Select an option--", new { @class = "form-control" })

        @Html.LabelFor(model => model.StartLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var CityResult = new List<string>();
            String sql2 = $"select * from City";
            SqlConnection connection2 = new SqlConnection("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=TravelCommand;Integrated Security=True;Connect Timeout=30;Encrypt=False;");
            connection2.Open();
            using (SqlCommand command = new SqlCommand(sql2, connection2))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        City data = new City(reader.GetInt32(0), reader.GetString(1).Trim(), reader.GetString(2).Trim(), reader.GetString(3).Trim());
                        CityResult.Add($"{data.Name}");
                    }
                }
            }
            connection2.Close();
            var CityChoices = new SelectList(CityResult);
        }
        @Html.DropDownListFor(model => model.StartLocation, CityChoices, "-- Select an option--", new { @class = "form-control" })

        @Html.LabelFor(model => model.StartLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var CityResult2 = new List<string>();
            String sql3 = $"select * from City";
            SqlConnection connection3 = new SqlConnection("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=TravelCommand;Integrated Security=True;Connect Timeout=30;Encrypt=False;");
            connection3.Open();
            using (SqlCommand command = new SqlCommand(sql3, connection3))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        City data = new City(reader.GetInt32(0), reader.GetString(1).Trim(), reader.GetString(2).Trim(), reader.GetString(3).Trim());
                        CityResult.Add($"{data.Name}");
                    }
                }
            }
            connection3.Close();
            var CityChoices2 = new SelectList(CityResult2);
        }
        @Html.DropDownListFor(model => model.EndLocation, CityChoices, "-- Select an option--", new { @class = "form-control" })

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" }, @Value = Model.StartTime })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" }, @Value = Model.EndTime })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Transportation, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var TransportationResult = new List<string>() { "Company car", "Bus", "MHD", "Walking", "Train", "Taxi", "Plane" };
            var TransportationChoices = new SelectList(TransportationResult);
        }
        @Html.DropDownListFor(model => model.Transportation, TransportationChoices, "-- Select an option--", new { @class = "form-control" })

        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var StatusResult = new List<string>() { "Created", "Approved", "Billed", "Canceled" };
            var StatusChoices = new SelectList(StatusResult);
        }
        @Html.DropDownListFor(model => model.Status, StatusChoices, "-- Select an option--", new { @class = "form-control" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>